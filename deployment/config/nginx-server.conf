server {
    listen 443 ssl;
    # 填写绑定证书的域名
    server_name $APP_DOMAIN;
    # 证书文件名称
    ssl_certificate  ssl.crt;
    # 私钥文件名称
    ssl_certificate_key ssl.key;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # gzip config
    gzip on;

    client_max_body_size 1024m;

    location /api {
        proxy_pass              http://rails:3000;
        proxy_redirect          off;
        proxy_set_header        Host rails;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /sidekiq {
        proxy_set_header        X-Script-Name /sidekiq;
        proxy_pass              http://rails:3000;

        proxy_set_header        Host $host;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Scheme $scheme;
        proxy_set_header        X-Real-IP $remote_addr;
    }

    location /rails {
        proxy_set_header        X-Script-Name /rails;
        proxy_pass              http://rails:3000;

        proxy_set_header        Host $host;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Scheme $scheme;
        proxy_set_header        X-Real-IP $remote_addr;
    }

    location / {
        root      /app;
        index     index.html;
        try_files $uri $uri/ /index.html;
    }
}

server {
    listen 80;
    # 填写绑定证书的域名
    server_name $APP_DOMAIN;
    # 把http的域名请求转成https
    return 301 https://$host$request_uri;
}
